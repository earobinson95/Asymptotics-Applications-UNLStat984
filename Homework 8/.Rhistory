library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=4, fig.align = "center")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=50),tidy=TRUE)
estCompare <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 3)
for(i in 1:samples){
xn <- max(theta*runif(n))
est[i,1] <- xn
est[i,2] <-xn*(n/(n-1))
est[i,3] <- xn*(n/(n-1))^2
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("delta0", "delta1", "delta2")
kable(bias_mse)
}
estCompare(n = 100, theta = 1, samples = 1000)
estCompare(n = 1000, theta = 1, samples = 1000)
estCompare(n = 10000, theta = 1, samples = 1000)
estCompare <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 3)
for(i in 1:samples){
xn <- max(theta*runif(n))
est[i,1] <- xn
est[i,2] <-xn*(n/(n-1))
est[i,3] <- xn*(n/(n-1))^2
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("delta0", "delta1", "delta2")
bias_mse
}
estCompare(n = 100, theta = 1, samples = 1000)
estCompare(n = 1000, theta = 1, samples = 1000)
estCompare(n = 10000, theta = 1, samples = 1000)
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=4, fig.align = "center")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=50),tidy=TRUE)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 3)
for(i in 1:samples){
x1 <- min(theta*(2*runif(n)-1)^(1/3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta",)
bias_mse
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*(2*runif(n)-1)^(1/3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta",)
bias_mse
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*(2*runif(n)-1)^(1/3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta")
bias_mse
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1(n = 1000, theta = 1, samples = 1000)
estCompare1(n = 10000, theta = 1, samples = 1000)
min(1*(2*runif(10)-1)^(1/3))
1*(2*runif(10)-1)^(1/3)
1*(2*runif(10)-1)^(1/3)
1*(2*runif(10)-1)
(-1)^(1/3)
(-1)^3
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*nthroot((2*runif(n)-1),3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta")
bias_mse
}
estCompare1(n = 100, theta = 1, samples = 1000)
??nthroot
install.packages("pracma", repos="http://R-Forge.R-project.org")
library(pracma)
library(pracma)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*nthroot((2*runif(n)-1),3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta")
bias_mse
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1(n = 1000, theta = 1, samples = 1000)
estCompare1(n = 10000, theta = 1, samples = 1000)
library(pracma)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*nthroot((2*runif(n)-1),3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta")
round(bias_mse,5)
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1(n = 1000, theta = 1, samples = 1000)
estCompare1(n = 10000, theta = 1, samples = 1000)
library(pracma)
estCompare1 <- function(n = 100, theta = 1, samples = 1000) {
est <- matrix(NA, samples, 2)
for(i in 1:samples){
x1 <- min(theta*nthroot((2*runif(n)-1),3))
est[i,1] <- x1
est[i,2] <- -(1+2/(3*n))*x1
bias <- est - theta
}
Bias <- colMeans((bias))
Var <- apply(est, 2, var)
MSE <- Var + Bias^2
bias_mse <- cbind(Bias, MSE)
rownames(bias_mse) <- c("X(1)", "Delta")
round(bias_mse,10)
}
estCompare1(n = 100, theta = 1, samples = 1000)
estCompare1(n = 1000, theta = 1, samples = 1000)
estCompare1(n = 10000, theta = 1, samples = 1000)
