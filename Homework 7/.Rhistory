library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=4, fig.align = "center")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=50),tidy=TRUE)
sim <- function(n,p) {
x <- rbinom(1000,n,p)
ci1 <- sum(abs(sqrt(n)*(x/n-p)*n/sqrt(x*(n-x))) < 1.96)
ci2 <- sum(abs(sqrt(n)*(asin(sqrt(x/n))-asin(sqrt(p)))) < .98)
c(ci1, ci2)/1000
}
nseq <- c(10,100,1000)
pseq <- c(0.1, 0.3, 0.5)
results <- matrix(NA, 3, 3)
for(i in 1:3){
for(j in 1:3){
coverage <- sim(nseq[i],pseq[j])
results[i,j] <- coverage
}
}
i = 1
j = 1
sim(nseq[i],pseq[j])
coverage <- sim(nseq[i],pseq[j])
coverage[1]
coverage[2]
nseq <- c(10,100,1000)
pseq <- c(0.1, 0.3, 0.5)
results <- matrix(NA, 3, 3)
colnames(results) <- c("n", "p", "coverageA", "coverageB")
results <- matrix(NA, 9, 4)
colnames(results) <- c("n", "p", "coverageA", "coverageB")
for(i in 1:3){
for(j in 1:3){
coverage <- sim(nseq[i],pseq[j])
results[i*j + j - 1, 1] <- nseq[i]
results[i*j + j - 1, 2] <- pseq[j]
results[i*j + j - 1, 3] <- coverage[1]
results[i*j + j - 1, 3]  <- coverage[2]
}
}
it = 0
for(i in 1:3){
for(j in 1:3){
it = it + 1
coverage <- sim(nseq[i],pseq[j])
results[it, 1] <- nseq[i]
results[it, 2] <- pseq[j]
results[it, 3] <- coverage[1]
results[it, 3] <- coverage[2]
}
}
kable(results)
sim <- function(n,p) {
x <- rbinom(1000,n,p)
ci1 <- sum(abs(sqrt(n)*(x/n-p)*n/sqrt(x*(n-x))) < 1.96)
ci2 <- sum(abs(sqrt(n)*(asin(sqrt(x/n))-asin(sqrt(p)))) < .98)
c(ci1, ci2)/1000
}
nseq <- c(10,100,1000)
pseq <- c(0.1, 0.3, 0.5)
results <- matrix(NA, 9, 4)
colnames(results) <- c("n", "p", "coverageA", "coverageB")
it = 0
for(i in 1:3){
for(j in 1:3){
it = it + 1
coverage <- sim(nseq[i],pseq[j])
results[it, 1] <- nseq[i]
results[it, 2] <- pseq[j]
results[it, 3] <- coverage[1]
results[it, 4] <- coverage[2]
}
}
kable(results)
help(pt)
sim2 <- function(n,sigsq){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
(pvalue < 0.05)
}
sim2(25, 0.1)
sim2(25, 1)
```{r 5.6b}
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
reject[i] <- (pvalue < 0.05)
}
sum(reject)
}
sim2(25, 1, 50)
sim2(25, 1, 500)
sim2(25, 1, 5000)
n = 25
sigsq = 1
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject[i] <- (pvalue < 0.05)
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Xn
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
Tn
pvalue <- pt(q = Tn, df = 1, lower.tail = T)
pvalue
reject <- (pvalue < 0.05)
reject
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){2*pvalue <- pt(q = Tn, df = 1, lower.tail = T)
}else{2*pvalue <- pt(q = Tn, df = 1, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)
}
sim2(25, 1, 5000)
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){pvalue <- 2*pt(q = Tn, df = 1, lower.tail = T)
}else{pvalue <- 2*pt(q = Tn, df = 1, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)
}
sim2(25, 1, 5000)
sim2(25, 1, 50000)
sim2(25, 1, 5000000)
sim2(100, 1, 5000)
sim2(200, 1, 5000)
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){pvalue <- 2*pnorm(q = Tn, lower.tail = T)
}else{pvalue <- 2*pnrom(q = Tn, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)
}
sim2(200, 1, 5000)
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){pvalue <- 2*pnorm(q = Tn, lower.tail = T)
}else{pvalue <- 2*pnorm(q = Tn, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)
}
sim2(200, 1, 5000)
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){pvalue <- 2*pnorm(q = Tn, lower.tail = T)
}else{pvalue <- 2*pnorm(q = Tn, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)/samps
}
sim2(200, 1, 5000)
sim2(25, 1, 5000)
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
XY <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
sum(abs(fisher(r)) > 1.96/sqrt(n))
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
sum(abs(fisher(r)) > 1.96/sqrt(n))
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
sum(abs(fisher(r)) > 1.96/sqrt(n))
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
sum(abs(fisher(r)) > 1.96/sqrt(n))
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
sum(abs(fisher(r)) > 1.96/sqrt(n))
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n, rho) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
Tn <- sqrt(n)*(fisher(r)-fisher(rho))
sum(abs(Tn)>1.96)
}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
Tn <- sqrt(n)*(fisher(r)-fisher(0))
sum(abs(Tn)>1.96)
}
sapply(c(3,5,10,20), rtest)/5000
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
Tn <- sqrt(n)*(fisher(r)-fisher(0))
sum(abs(Tn)>1.96)
}
sapply(c(3,5,10,20), rtest)/5000
library(knitr)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.width=5, fig.height=4, fig.align = "center")
knitr::opts_chunk$set(tidy.opts=list(width.cutoff=50),tidy=TRUE)
sim2 <- function(n,sigsq, samps){
reject <- rep(NA, samps)
for(i in 1:samps){
Xn <- rnorm(n = n, mean = 0, sd = sqrt(sigsq))
Tn <- (sqrt(n)*(log((1/n)*sum(Xn^2))-log(sigsq)))/sqrt(2)
if(Tn < 0){pvalue <- 2*pnorm(q = Tn, lower.tail = T)
}else{pvalue <- 2*pnorm(q = Tn, lower.tail = F)}
reject[i] <- (pvalue < 0.05)
}
sum(reject)/samps
}
sim2(25, 1, 5000)
fisher <- function(x){log((1+x)/(1-x))/2}
rtest <- function(n) {
z <- array(rnorm(10000*n),c(5000,n,2))
r  <- apply(z, 1, function(x) cor(x[,1],x[,2]))
Tn <- sqrt(n)*(fisher(r)-fisher(0))
sum(abs(Tn)>1.96)
}
sapply(c(3,5,10,20), rtest)/5000
